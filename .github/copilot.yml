# .github/copilot.yml
# Configuration for GitHub Copilot for PC Automation Tools
version: 1

# Enable core Copilot features
features:
  completion:
    enabled: true
    # Enhanced completion for AI agent development
    suggestions:
      enabled: true
      max_suggestions: 5
      include_comments: true
  
  autoSuggestions:
    enabled: true
    # Auto-suggestions for agent configurations and workflows
    triggers:
      - "agent"
      - "orchestrator" 
      - "config"
      - "llm_config"
      - "docker run"
  
  inlineSuggestions:
    enabled: true
    # Context-aware suggestions for the AI stack
    context_aware: true

# Language-specific configurations
languages:
  python:
    # Enhanced Python support for AI agents
    completion:
      enabled: true
      include_type_hints: true
      suggest_imports: true
      # Prioritize AI/ML imports
      preferred_imports:
        - "from autogen import AssistantAgent, UserProxyAgent"
        - "from openai import OpenAI"
        - "import asyncio"
        - "from dataclasses import dataclass"
  
  shell:
    # Shell script support for automation
    completion:
      enabled: true
      suggest_flags: true
      include_error_handling: true
  
  dockerfile:
    # Docker configuration support
    completion:
      enabled: true
      suggest_best_practices: true

# Repository-specific settings
repository:
  # AI agent development focus
  domain: "ai_automation"
  
  # Key file patterns to prioritize for review
  important_files:
    - "**/*.py"              # All Python files
    - "**/*.sh"              # All shell scripts
    - "**/*.md"              # All Markdown documentation
    - "**/*.yml"             # All YAML files
    - "**/*.yaml"            # All YAML files
    - "**/docker-compose*.yml"  # Docker compose files
    - "**/docker-compose*.yaml" # Docker compose files
    - "**/*.json"            # All JSON configuration files
    - "**/*.txt"             # All text files
    - "**/*.conf"            # Configuration files
    - "**/*.cfg"             # Configuration files
    - "**/*.ini"             # INI files
    - "**/*.bat"             # Windows batch files
    - "**/*.ps1"             # PowerShell scripts
    - "**/*.css"             # CSS files
    - "**/*.js"              # JavaScript files
    - "*.py"                 # Root level Python files
    - "*.sh"                 # Root level shell scripts
    - "*.md"                 # Root level documentation
    - ".github/**/*"         # GitHub configuration
    - "Dockerfile*"          # Dockerfiles
    - "requirements*.txt"    # Python requirements
    - ".env*"                # Environment files
    - ".gitignore"           # Git ignore file
    - "Makefile"             # Makefiles
  
  # Common code patterns for this repo
  patterns:
    - name: "agent_config"
      description: "AI agent configuration pattern"
      template: |
        @dataclass
        class AIConfig:
            model_name: str = "llama3.2"
            base_url: str = "http://localhost:11434/v1"
            api_key: str = "ollama"
            temperature: float = 0.7
    
    - name: "docker_service"
      description: "Docker service deployment pattern"
      template: |
        docker run -d \
          --name ${service_name} \
          -p ${host_port}:${container_port} \
          -v ${volume_path}:/app/data \
          --restart unless-stopped \
          ${image_name}
    
    - name: "autogen_agent"
      description: "AutoGen agent creation pattern"
      template: |
        agent = AssistantAgent(
            name="${agent_name}",
            llm_config=llm_config,
            system_message="${system_message}"
        )

# Workflow suggestions
workflows:
  - name: "agent_development"
    description: "AI agent development workflow"
    steps:
      - "Create agent configuration"
      - "Implement agent class"
      - "Add to unified orchestrator"
      - "Create installation script"
      - "Add documentation"
      - "Include tests"
  
  - name: "service_deployment"
    description: "Service deployment workflow"
    steps:
      - "Create Docker configuration"
      - "Add service startup script"
      - "Include health checks"
      - "Add monitoring"
      - "Document usage"

# Pull request review settings
review:
  enabled: true
  max_files: 50              # Maximum files to review in one PR
  max_file_size: 10000       # Maximum file size in lines to review
  skip_patterns:
    - "*.log"                # Skip log files
    - "**/.git/**"           # Skip git internal files
    - "**/node_modules/**"   # Skip node modules
    - "**/__pycache__/**"    # Skip Python cache
    - "**/.pytest_cache/**" # Skip pytest cache
    - "**/venv/**"           # Skip virtual environments
    - "**/env/**"            # Skip environment directories
  focus_on:
    - "security"             # Focus on security issues
    - "code_quality"         # Focus on code quality
    - "documentation"        # Focus on documentation quality
    - "best_practices"       # Focus on best practices
