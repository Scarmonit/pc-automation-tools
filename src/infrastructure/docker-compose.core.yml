version: '3.8'

# Core AI Swarm Intelligence Services
# Essential services for initial deployment

services:
  # Main AI Swarm Intelligence System
  swarm-master:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: swarm-master
    hostname: swarm-master
    ports:
      - "8000:8000"  # Main API
    environment:
      - SWARM_MODE=production
      - DATABASE_PATH=/data/unified_swarm.db
      - ENABLE_ALL_INTEGRATIONS=true
      - LOG_LEVEL=INFO
      - PYTHONUNBUFFERED=1
    volumes:
      - ./data:/data
      - ./logs:/logs
      - ./config:/config
      - C:/Users/scarm/.claude/swarm-intelligence:/claude-data:ro
    networks:
      - swarm-network
    healthcheck:
      test: ["CMD", "python", "docker_health_check.py", "--check", "api"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1'

  # Redis Cache for Performance
  swarm-cache:
    image: redis:7-alpine
    container_name: swarm-cache
    hostname: swarm-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - swarm-network
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Portainer for Docker Management
  portainer:
    image: portainer/portainer-ce:latest
    container_name: swarm-portainer
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer-data:/data
    networks:
      - swarm-network
    restart: unless-stopped

networks:
  swarm-network:
    driver: bridge
    name: swarm-network

volumes:
  redis-data:
    name: redis-data-volume
  portainer-data:
    name: portainer-data-volume